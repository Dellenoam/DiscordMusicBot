import asyncio
import os
import dotenv
import discord
import yt_dlp
from discord.ext import commands
from discord.ui import View

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
dotenv.load_dotenv()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = commands.Bot()


# –ü–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∑–∞–¥–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
@bot.event
async def on_ready():
    await bot.change_presence(status=discord.Status.do_not_disturb, activity=discord.Game(name="Detroit: Become Human"))
    print('Bot is online!')


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å YouTube
ydl_opts = {
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
}

# –û–±—ä–µ–∫—Ç YoutubeDL —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
ydl = yt_dlp.YoutubeDL(ydl_opts)

# –û—á–µ—Ä–µ–¥—å –º—É–∑—ã–∫–∏
queues = dict()


@bot.slash_command(name='play')
async def play(ctx, *, query: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å"""
    await ctx.defer()

    if not ctx.author.voice:
        return await ctx.respond('–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –∫–∞–Ω–∞–ª—É')

    await enqueue(ctx, query)

    if not ctx.voice_client or not ctx.voice_client.is_playing():
        await play_queue(ctx)


async def enqueue(ctx, query: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å"""
    with ydl:
        if 'youtube.com' in query or 'youtu.be' in query:
            info = ydl.extract_info(query, download=False)
            audio_url = info.get('url')
            title = info.get('title')
        else:
            info = ydl.extract_info(f'ytsearch:{query}', download=False)
            if not info.get('entries'):
                return await ctx.respond('–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω')
            else:
                audio_url = info['entries'][0].get('url')
                title = info['entries'][0].get('title')

    if audio_url is None:
        return await ctx.respond('–¢—Ä–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω')

    guild_id = ctx.guild.id

    queues.setdefault(guild_id, []).append(
        {'url': audio_url, 'title': title}
    )

    await ctx.respond(f"–¢—Ä–µ–∫: {title} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å")


async def play_queue(ctx):
    """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç—Ä–µ–∫–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏"""
    guild_id = ctx.guild.id

    while queues[guild_id]:
        query = queues[guild_id].pop(0)

        if not ctx.voice_client or not ctx.voice_client.is_connected():
            await ctx.author.voice.channel.connect()

        ctx.voice_client.play(
            discord.FFmpegPCMAudio(
                query['url'],
                before_options='-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5 -vn'
            )
        )
        await ctx.respond(f"–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {query['title']}", view=SkipQueueView())

        while ctx.voice_client.is_playing():
            await asyncio.sleep(1)

    await ctx.voice_client.disconnect()


# –ö–ª–∞—Å—Å View —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å" –∏ "–û—á–µ—Ä–µ–¥—å"
class SkipQueueView(View):
    @discord.ui.button(label="–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.primary, emoji='‚è≠')
    async def skip_button(self, button, interaction):
        """–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫"""
        voice_client = interaction.guild.voice_client
        if voice_client and voice_client.is_playing():
            voice_client.stop()
            return await interaction.response.send_message('–¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω')

        await interaction.reponse.send_message('–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç')

    @discord.ui.button(label="–û—á–µ—Ä–µ–¥—å", style=discord.ButtonStyle.primary, emoji='üéµ')
    async def queue_button(self, button, interaction):
        """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å"""
        guild_id = interaction.guild.id

        if queues.get(guild_id):
            formatted_queue = "\n".join(
                [f'{index + 1}. {query["title"]}' for index, query in enumerate(queues[guild_id])])
            message = f'–°–ª–µ–¥—É—é—â–∏–µ —Ç—Ä–µ–∫–∏:\n{formatted_queue}'
            return await interaction.response.send_message(message)

        await interaction.response.send_message('–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞')


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.run(os.getenv('DISCORD_TOKEN'))
