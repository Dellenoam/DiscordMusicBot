import asyncio
import os
import re
import dotenv
import discord
import yt_dlp
from buttons import SkipButton, QueueButton, RemoveButton
from handlers import skip_handler, queue_handler, skip_votes
from discord.ext import commands

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
dotenv.load_dotenv()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = commands.Bot()


# –ü–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∑–∞–¥–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
@bot.event
async def on_ready():
    activity = discord.Game(name="Detroit: Become Human")
    await bot.change_presence(status=discord.Status.do_not_disturb, activity=activity)
    print('Bot is online!')


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å YouTube
ydl_opts = {
    'quiet': True,
    'noplaylist': True,
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
}

# –û–±—ä–µ–∫—Ç YoutubeDL —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
ydl = yt_dlp.YoutubeDL(ydl_opts)

# –û—á–µ—Ä–µ–¥—å –º—É–∑—ã–∫–∏
queues = dict()

# –°–µ–º–∞—Ñ–æ—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
guild_semaphore = dict()


@bot.slash_command(name='play')
async def play(ctx, *, query: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å"""
    if not ctx.author.voice:
        return await ctx.respond('–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ', ephemeral=True)

    await ctx.respond('–î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º ü§î')

    try:
        message_to_reply = await enqueue(ctx, query)
    except (yt_dlp.utils.DownloadError, yt_dlp.utils.ExtractorError):
        return await ctx.respond('–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞')

    semaphore = guild_semaphore.get(ctx.guild_id)
    if semaphore is None:
        semaphore = asyncio.Semaphore(1)
        guild_semaphore[ctx.guild_id] = semaphore
    async with semaphore:
        if not queues.get(ctx.guild_id):
            return
        await play_queue(ctx, message_to_reply)


async def enqueue(ctx, query: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å"""
    with ydl:
        not_video_url_regex = re.compile(r'^(?:https?://)?(?:www\.)?(youtube.com|youtu.be)/?$')
        video_url_regex = re.compile(
            r'^(?:https?://)?(?:www\.)?(?:youtu\.be/|youtube\.com/(?:embed/|v/|watch\?v=|watch\?.+&v=))([\w-]{11})$'
        )
        if bool(not_video_url_regex.match(query)):
            raise yt_dlp.utils.ExtractorError('ERROR: –í–≤–µ–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube, –∞ –Ω–µ –Ω–∞ –≤–∏–¥–µ–æ —Å –Ω–µ–≥–æ')
        if bool(video_url_regex.match(query)):
            info = await asyncio.to_thread(lambda: ydl.extract_info(query, download=False))
            audio_url = info['url']
            title = info['title']
        else:
            info = await asyncio.to_thread(lambda: ydl.extract_info(f'ytsearch:{query}', download=False))
            if not info['entries']:
                return await ctx.respond('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É')
            audio_url = info['entries'][0]['url']
            title = info['entries'][0]['title']

    guild_id = ctx.guild_id
    track_info = {'url': audio_url, 'title': title, 'author': ctx.author}
    queues.setdefault(guild_id, []).append(track_info)

    view = discord.ui.View(timeout=None)
    view.add_item(RemoveButton(queues, track_info))
    return await ctx.respond(f"–¢—Ä–µ–∫: {title} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å", view=view)


async def play_queue(ctx, message_to_reply):
    """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç—Ä–µ–∫–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏"""
    guild_id = ctx.guild.id

    query = queues[guild_id].pop(0)

    if not ctx.voice_client:
        await ctx.author.voice.channel.connect()

    ctx.voice_client.play(
        discord.FFmpegPCMAudio(
            query['url'],
            before_options='-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5 -vn'
        )
    )

    view = discord.ui.View(timeout=None)
    view.add_item(SkipButton())
    view.add_item(QueueButton(queues))
    await message_to_reply.reply(f"–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {query['title']}", view=view)

    while ctx.voice_client.is_playing():
        await asyncio.sleep(1)

    if skip_votes.get(guild_id):
        del skip_votes[guild_id]

    if not queues[guild_id]:
        del guild_semaphore[guild_id]
        await ctx.voice_client.disconnect()


@bot.slash_command(name='skip', description='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
async def skip(ctx):
    """–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫"""
    await skip_handler(ctx)


@bot.slash_command(name='queue', description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å')
async def queue(ctx):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å"""
    await queue_handler(ctx, queues)


# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.run(os.getenv('DISCORD_TOKEN'))
