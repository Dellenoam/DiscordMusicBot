import asyncio
import os
import re
import dotenv
import discord
import yt_dlp
import buttons
from buttons import SkipButton, QueueButton, RemoveButton, skip_votes
from discord.ext import commands

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
dotenv.load_dotenv()

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = commands.Bot()


# –ü–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∑–∞–¥–∞–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
@bot.event
async def on_ready():
    await bot.change_presence(status=discord.Status.do_not_disturb, activity=discord.Game(name="Detroit: Become Human"))
    print('Bot is online!')


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ —Å YouTube
ydl_opts = {
    'quiet': True,
    'format': 'bestaudio/best',
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
}

# –û–±—ä–µ–∫—Ç YoutubeDL —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
ydl = yt_dlp.YoutubeDL(ydl_opts)

# –û—á–µ—Ä–µ–¥—å –º—É–∑—ã–∫–∏
queues = dict()


@bot.slash_command(name='play')
async def play(ctx, *, query: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å"""
    if not ctx.author.voice:
        return await ctx.respond('–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ', ephemeral=True)

    thinking_response = await ctx.respond('–î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º ü§î')

    try:
        await enqueue(ctx, query)
    except (yt_dlp.utils.DownloadError, yt_dlp.utils.ExtractorError):
        await thinking_response.delete()
        return await ctx.respond('–í–≤–µ–¥–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Å—ã–ª–∫–∞', ephemeral=True)

    if not ctx.voice_client or not ctx.voice_client.is_playing():
        await play_queue(ctx)


async def enqueue(ctx, query: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å"""
    with ydl:
        youtube_url_regex = re.compile(r'(https?://)?(www\.)?(youtube\.com|youtu\.?be)/?$')
        youtube_url_correct_regex = re.compile(r'(https?://)?(www\.)?(youtube\.com|youtu\.?be)/.*$')
        if bool(youtube_url_regex.match(query)):
            raise yt_dlp.utils.ExtractorError('ERROR: –í–≤–µ–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube, –∞ –Ω–µ –Ω–∞ –≤–∏–¥–µ–æ —Å –Ω–µ–≥–æ')
        elif bool(youtube_url_correct_regex.match(query)):
            info = ydl.extract_info(query, download=False)
            audio_url = info['url']
            title = info['title']
        else:
            info = ydl.extract_info(f'ytsearch:{query}', download=False)
            audio_url = info['entries'][0]['url']
            title = info['entries'][0]['title']

    guild_id = ctx.guild.id
    track_info = {'url': audio_url, 'title': title, 'ctx': ctx}
    queues.setdefault(guild_id, []).append(
        track_info
    )

    view = discord.ui.View()
    view.add_item(RemoveButton(queues, track_info))
    view.add_item(QueueButton(queue, queues))
    await ctx.respond(f"–¢—Ä–µ–∫: {title} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å", view=view)


async def play_queue(ctx):
    """–ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç—Ä–µ–∫–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏"""
    guild_id = ctx.guild.id

    while queues[guild_id]:
        query = queues[guild_id].pop(0)
        ctx = query['ctx']

        if not ctx.voice_client or not ctx.voice_client.is_connected():
            await ctx.author.voice.channel.connect()

        ctx.voice_client.play(
            discord.FFmpegPCMAudio(
                query['url'],
                before_options='-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5 -vn'
            )
        )

        view = discord.ui.View()
        view.add_item(SkipButton())
        view.add_item(QueueButton(queue, queues))
        await ctx.respond(f"–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {query['title']}", view=view)

        while ctx.voice_client.is_playing():
            await asyncio.sleep(1)

        skip_votes.clear()

    await ctx.voice_client.disconnect()


@bot.slash_command(name='skip', description='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫')
async def skip(interaction):
    """–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫"""
    await buttons.SkipButton.button_handler(interaction)


@bot.slash_command(name='queue', description='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å')
async def queue(interaction):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å"""
    await buttons.QueueButton.button_handler(interaction, queues)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.run(os.getenv('DISCORD_TOKEN'))
